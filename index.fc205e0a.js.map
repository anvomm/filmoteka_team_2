{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,uCCAAC,EAAAD,EAAA,S,uCA8CAE,eAAeC,IAMb,GALAC,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,IAGsB,aAA1BR,EAAAS,YAAYC,UACd,IACE,MAAMC,QAAa,EAAAC,EAAAC,qBAAoBb,EAAAS,YAAYK,OACnD,EAAAC,EAAAC,YAAWL,EAAMX,EAAAS,YAAYK,K,CAC7B,MAAOG,GACPC,QAAQC,IAAIF,E,CAIhB,GAA8B,WAA1BjB,EAAAS,YAAYC,UACd,IACE,MAAMC,QAAa,EAAAC,EAAAQ,mBACjBpB,EAAAS,YAAYY,YACZrB,EAAAS,YAAYK,OAEd,EAAAC,EAAAC,YAAWL,EAAMX,EAAAS,YAAYK,K,CAC7B,MAAOQ,GACPJ,QAAQC,IAAIG,E,GA/DlB,EAAApB,EAAAqB,WAAWC,gBAAgBC,iBAAiB,SAwB5C,SAAoBC,GAElB,GADAA,EAAEC,iBACwB,WAAtBD,EAAEE,OAAOC,SAAuB,OAEpC,GADAX,QAAQC,IAAIO,EAAEE,OAAOE,QAAQC,QACG,MAA5BL,EAAEE,OAAOE,QAAQC,OAAgB,CACnC,MAAMjB,EAAOkB,OAAON,EAAEE,OAAOE,QAAQC,QAKrC/B,EAAAS,YAAYK,KAAOA,EACnBI,QAAQC,IAAInB,EAAAS,YAAYK,KAAMA,GAC9BV,G,MAnCJ,EAAAF,EAAAqB,WAAWU,WAAWR,iBAAiB,SAavC,WAKEzB,EAAAS,YAAYyB,gBAEZ9B,G,KAnBF,EAAAF,EAAAqB,WAAWY,UAAUV,iBAAiB,SAEtC,WAMEzB,EAAAS,YAAY2B,gBACZhC,G,kBDPW,EAAAF,EAAAqB,YAMb,EAAAX,EAAAyB,eAAcC,MAAKnC,MAAMQ,IACvBX,EAAAS,YAAY8B,aAAe5B,CAAI,KAGjC,EAAAC,EAAAC,qBAAoBb,EAAAS,YAAYK,MAAMwB,MAAK3B,IACzCX,EAAAS,YAAYC,UAAY,WACpBC,IACF,EAAAI,EAAAC,YAAWL,EAAMX,EAAAS,YAAYK,KAAK","sources":["src/js/mainPage.js","src/js/paginationEvents.js"],"sourcesContent":["import { siteConfigs } from './siteConfigs';\nimport { fetchTrendingMovies } from './fetchMovies';\nimport { renderList } from './renderFilmList';\n// import { stylizePaginationOnStart } from './pagination';\n\nimport refsList from './refs';\n\nimport './paginationEvents';\nimport { fetchGenres } from './fetchMovies';\n\nconst refs = refsList();\n// refs.pagination.style.display = 'none';\n// let page = 1;\n\n\n\nfetchGenres().then(async data => {\n  siteConfigs.geners = await data;\n});\n\nfetchTrendingMovies(siteConfigs.page).then(data => {\n  siteConfigs.lastFetch = 'TRENDING';\n  if (data) {\n    renderList(data, siteConfigs.page);\n    // stylizePaginationOnStart(data.page, data.total_pages); //data.page, data.total_pages 15 for test\n  }\n});\n","import refsList from './refs';\nimport { siteConfigs } from './siteConfigs';\n\nimport { fetchTrendingMovies, fetchMovieByQuery } from './fetchMovies';\nimport { renderList } from './renderFilmList';\n\nrefsList().paginationBlock.addEventListener('click', getNewPage);\nrefsList().rightArrow.addEventListener('click', rightBtnClick);\nrefsList().leftArrow.addEventListener('click', leftBtnClick);\n\nfunction leftBtnClick() {\n  //   if (siteConfigs.lastFetch === 'WATCHED')\n  //     siteConfigs.decrementWatchedPage();\n  //   if (siteConfigs.lastFetch === 'QUEUE')\n  //     siteConfigs.decrementQueuePage();\n\n  siteConfigs.decrementPage();\n  loadMovies();\n}\n\nfunction rightBtnClick() {\n  //   if (siteConfigs.lastFetch === 'WATCHED')\n  //     siteConfigs.incrementWatchedPage();\n  //   if (siteConfigs.lastFetch === 'QUEUE')\n  //     siteConfigs.incrementQueuePage();\n  siteConfigs.incrementPage();\n\n  loadMovies();\n}\n\nfunction getNewPage(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'BUTTON') return;\n  console.log(e.target.dataset.number);\n  if (e.target.dataset.number !== '0') {\n    const page = Number(e.target.dataset.number);\n    // if (siteConfigs.lastFetch === 'WATCHED')\n    //   siteConfigs.watchedPage = page;\n    // if (siteConfigs.lastFetch === 'QUEUE')\n    //   siteConfigs.queuePage = page;\n    siteConfigs.page = page;\n    console.log(siteConfigs.page, page);\n    loadMovies();\n  }\n}\n\nasync function loadMovies() {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n  });\n\n  if (siteConfigs.lastFetch === 'TRENDING') {\n    try {\n      const data = await fetchTrendingMovies(siteConfigs.page);\n      renderList(data, siteConfigs.page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  if (siteConfigs.lastFetch === 'SEARCH') {\n    try {\n      const data = await fetchMovieByQuery(\n        siteConfigs.searchQuery,\n        siteConfigs.page\n      );\n      renderList(data, siteConfigs.page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  //   if (siteConfigs.lastFetch === 'WATCHED') {\n  //     try {\n  //       const data = await watchedTabClickHandler();\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  //   if (siteConfigs.lastFetch === 'QUEUE') {\n  //     try {\n  //       const data = await queueTabClickHandler();\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n}\n"],"names":["$iF1aL","parcelRequire","$krGWQ","async","$e2a1da2d7d4fcb76$var$loadMovies","window","scrollTo","top","left","siteConfigs","lastFetch","data","$1TPJ0","fetchTrendingMovies","page","$iaNTK","renderList","error","console","log","fetchMovieByQuery","searchQuery","error1","default","paginationBlock","addEventListener","e","preventDefault","target","nodeName","dataset","number","Number","rightArrow","incrementPage","leftArrow","decrementPage","fetchGenres","then","geners"],"version":3,"file":"index.fc205e0a.js.map"}