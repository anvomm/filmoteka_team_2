{"mappings":"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","sources":["src/js/library.js","src/templates/library-default.hbs","src/js/libraryFromLocalStorage.js"],"sourcesContent":["import refsList from './refs';\n/* import { renderList } from './renderFilmList'; */\nimport createDefaultMarkUp from '../templates/library-default.hbs';\nimport createMarkUp from '../templates/films-card.hbs';\nimport {\n  fetchTrendingMovies,\n  fetchGenres,\n  fetchMovieById,\n} from './fetchMovies';\nimport { onOpenModal } from './modal';\n\nconst refs = refsList();\n\n/* defaultPageShow(); */\n\n/* const watched = [\n  807356, 414906\n];\nconst queue = [595586]; // пробный массив\nconst KEY__WATCHED = 'watched';\nconst KEY__QUEUE = 'queue';\nlocalStorage.setItem(KEY__WATCHED, JSON.stringify(watched)); //убрать\nlocalStorage.setItem(KEY__QUEUE, JSON.stringify(queue)); //убрать\nlet watchedMovies;\nlet queueMovies; */\n\n/* libraryMainPage(); */\n\n/* async function libraryMainPage() {\n  if (JSON.parse(localStorage.getItem(KEY__WATCHED)).length !== 0) {\n    const movies = await renderWatchedMoviesList();\n    renderWatchedCards(movies);\n  }\n}\n */\nexport function defaultPageShow() {\n  fetchTrendingMovies(3).then(data => {\n    if (data) {\n      renderList(data.results);\n    }\n  });\n\n  async function renderList(data) {\n    const genersList = await fetchGenres();\n    data.forEach(el => {\n      const newArr = [];\n      el.genre_ids.forEach(gener => {\n        const newEl = genersList.find(x => x.id === gener);\n        newArr.push(newEl.name);\n      });\n\n      if (newArr.length > 2) {\n        newArr.splice(2, newArr.length - 2, 'Other');\n      }\n\n      el.genre_ids = newArr.join(', ');\n    });\n\n    const markup = data\n      .map(film => {\n        return createDefaultMarkUp(film);\n      })\n      .slice(0, 6)\n      .join('');\n\n    if (refs.libraryMoviesList) {\n      refs.libraryMoviesList.insertAdjacentHTML('beforeend', markup);\n    }\n\n    refsList().filmsElements.forEach(card =>\n      card.addEventListener('click', onOpenModal)\n    );\n  }\n}\n/* if (\n  JSON.parse(!localStorage.getItem(KEY__WATCHED)) ||\n  JSON.parse(localStorage.getItem(KEY__WATCHED)).length === 0\n) {\n  defaultPageShow();\n} */\n\n// Wached -> queue button part\n\n/* if (refs.libraryWatchedBtn)\n  refs.libraryWatchedBtn.addEventListener('click', onWatchedBtn);\nif (refs.libraryQueueBtn)\n  refs.libraryQueueBtn.addEventListener('click', onQueueBtn);\n\n// WATCHED BTN\n\nasync function onWatchedBtn() {\n  defaultContainerBuild();\n\n  if (JSON.parse(localStorage.getItem(KEY__WATCHED)).length === 0) {\n    defaultPageShow();\n  }\n\n  if (JSON.parse(localStorage.getItem(KEY__WATCHED)).length !== 0) {\n    defaultClean();\n    const movies = await renderWatchedMoviesList();\n    renderWatchedCards(movies);\n  }\n  if (refs.libraryWatchedBtn)\n    refs.libraryWatchedBtn.classList.add('header-library__btn-current');\n  if (refs.libraryQueueBtn)\n    refs.libraryQueueBtn.classList.remove('header-library__btn-current');\n}\n\n// ======== watched & queue = keys from localStorage ==========\n\nasync function renderWatchedMoviesList() {\n  try {\n    watchedMovies = JSON.parse(localStorage.getItem(KEY__WATCHED));\n  } catch (error) {\n    console.log(error.name);\n    console.log(error.message);\n  }\n\n  const arrayOfPromises = watchedMovies.map(async movieId => {\n    const response = await fetchMovieById(movieId);\n    return response;\n  });\n\n  const movies = await Promise.all(arrayOfPromises);\n  return movies;\n}\nfunction renderWatchedCards(movies) {\n  console.log(movies);\n  const genres = movies.map(movie => movie.genres.map(genre => genre.name));\n  movies.map((movie, i) => (movie.genre_ids = genres[i].join(', ')));\n\n  const markup = movies.map(movie => createMarkUp(movie)).join('');\n  defaultClean();\n  if (refs.libraryMoviesList)\n    refs.libraryMoviesList.insertAdjacentHTML('beforeend', markup);\n\n  refsList().filmsElements.forEach(card =>\n    card.addEventListener('click', onOpenModal)\n  );\n}\n\nfunction defaultClean() {\n  if (refs.libraryMoviesList) refs.libraryMoviesList.innerHTML = '';\n  if (refs.libraryDefaultContainer)\n    refs.libraryDefaultContainer.style.display = 'none';\n}\n\nfunction defaultContainerBuild() {\n  if (refs.libraryMoviesList) refs.libraryMoviesList.innerHTML = '';\n  if (refs.libraryDefaultContainer)\n    refs.libraryDefaultContainer.style.display = 'flex';\n}\n\n// QUEUE BTN\n\nasync function onQueueBtn() {\n  if (refs.libraryQueueBtn)\n    refs.libraryQueueBtn.classList.add('header-library__btn-current');\n  if (refs.libraryWatchedBtn)\n    refs.libraryWatchedBtn.classList.remove('header-library__btn-current');\n  if (\n    !JSON.parse(localStorage.getItem(KEY__QUEUE)) ||\n    JSON.parse(localStorage.getItem(KEY__QUEUE)).length === 0\n  ) {\n    defaultContainerBuild();\n    defaultPageShow();\n  }\n  if (JSON.parse(localStorage.getItem(KEY__QUEUE)).length !== 0) {\n    const movies = await renderQueueMoviesList();\n    renderWatchedCards(movies);\n  }\n}\n\nasync function renderQueueMoviesList() {\n  try {\n    queueMovies = JSON.parse(localStorage.getItem(KEY__QUEUE));\n  } catch (error) {\n    console.log(error.name);\n    console.log(error.message);\n  }\n\n  const arrayOfPromises = queueMovies.map(async movieId => {\n    const response = await fetchMovieById(movieId);\n    return response;\n  });\n\n  const movies = await Promise.all(arrayOfPromises);\n  return movies;\n}\n */\n","<li class='library-default-film-card' data-action='{{this.id}}' data-modal-open>\n\n    <img class='library-default-film-card__img' src='https://image.tmdb.org/t/p/w500{{this.poster_path}}' alt='{{original_title}} '\n        width='190'\n        onerror=\"this.onerror=null;this.src='https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-';\" />\n\n    <div class='library-default-film-card__wrapper'>\n        <h2 class='library-default-film-card__title'>{{this.title}} {{this.name}} ({{this.release_date}})</h2>\n        <p class='library-default-film-card__discription'>\n            <span class='library-default-film-card__genres'>{{this.genre_ids}}</span>\n        </p>\n    </div>\n\n</li>","import { defaultPageShow } from './library';\nimport refsList from './refs';\nimport createMarkUp from '../templates/films-card.hbs';\nimport { onOpenModal } from './modal';\n\nconst watched = [\n  /*   {\n    poster_path: '/wdbiMjXd4CxPfCx4r4Jfy8cGec0.jpg',\n    id: '11111',\n    title: 'My policeman',\n    vote_average: '8.249',\n    vote_count: '177',\n    popularity: '290.839',\n    overview:\n      'In the late 1990s, the arrival of elderly invalid Patrick into Marion and Tom’s home triggers the exploration of seismic events from 40 years previous: the passionate relationship between Tom and Patrick at a time when homosexuality was illegal.',\n    genre_ids: 'Drama, Romance',\n    release_date: '2022-11-04',\n  },\n\n  {\n    poster_path: '/wdbiMjXd4CxPfCx4r4Jfy8cGec0.jpg',\n    id: '2222',\n    title: 'My policeman',\n    vote_average: '8.249',\n    vote_count: '177',\n    popularity: '290.839',\n    overview:\n      'In the late 1990s, the arrival of elderly invalid Patrick into Marion and Tom’s home triggers the exploration of seismic events from 40 years previous: the passionate relationship between Tom and Patrick at a time when homosexuality was illegal.',\n    genre_ids: 'Drama, Romance',\n    release_date: '2022-11-04',\n  },\n\n  {\n    poster_path: document.querySelector('.modal-card__img').src.slice(31),\n    id: document.querySelector('.modal-card__img').dataset.id,\n    title: document.querySelector('.film-card-content__title').textContent,\n    vote_average: document.querySelector('.rating').textContent,\n    genre_ids: document.querySelector('.film-card-content__item-text-right').textContent,\n    release_date: document.querySelector('.film-card-content__title').dataset.date,\n  }, */\n];\nconst phrase =\n  'https://image.tmdb.org/t/p/w500/wdbiMjXd4CxPfCx4r4Jfy8cGec0.jpg';\nconsole.log(phrase.slice(31));\n\nconst queue = [\n  {\n    poster_path: '/5EB9LAzIePTQoMpg2M1GNJpNn9s.jpg',\n    id: '11111',\n    title: 'King Lines',\n    vote_average: '8.249',\n    vote_count: '177',\n    popularity: '290.839',\n    overview:\n      'In the late 1990s, the arrival of elderly invalid Patrick into Marion and Tom’s home triggers the exploration of seismic events from 40 years previous: the passionate relationship between Tom and Patrick at a time when homosexuality was illegal.',\n    genre_ids: 'Adventure, Documentary',\n    release_date: '2022-11-04',\n  },\n\n  {\n    poster_path: '/9nAWnMNvFrhSmytB2VLw3OR7BJ3.jpg',\n    id: '2222',\n    title: 'Christine',\n    vote_average: '8.249',\n    vote_count: '177',\n    popularity: '290.839',\n    overview:\n      'In the late 1990s, the arrival of elderly invalid Patrick into Marion and Tom’s home triggers the exploration of seismic events from 40 years previous: the passionate relationship between Tom and Patrick at a time when homosexuality was illegal.',\n    genre_ids: 'Drama',\n    release_date: '2022-11-04',\n  },\n\n  {\n    poster_path: '/8PT4sAcneQ7MtZ1Mqoe2EyOJHmZ.jpg',\n    id: '2323',\n    title: 'Field of Dreams',\n    vote_average: '8.249',\n    vote_count: '177',\n    popularity: '290.839',\n    overview:\n      'In the late 1990s, the arrival of elderly invalid Patrick into Marion and Tom’s home triggers the exploration of seismic events from 40 years previous: the passionate relationship between Tom and Patrick at a time when homosexuality was illegal.',\n    genre_ids: 'Drama, Romance',\n    release_date: '2022-11-04',\n  },\n];\n\nconst refs = refsList();\n\nconst KEY__WATCHED = 'watched';\nconst KEY__QUEUE = 'queue';\nlocalStorage.setItem(KEY__WATCHED, JSON.stringify(watched));\nlocalStorage.setItem(KEY__QUEUE, JSON.stringify(queue));\n\nif (\n  JSON.parse(!localStorage.getItem(KEY__WATCHED)) ||\n  JSON.parse(localStorage.getItem(KEY__WATCHED)).length === 0\n) {\n  defaultPageShow();\n} else {\n  libraryMainPageBuild();\n}\n\nif (refs.libraryWatchedBtn)\n  refs.libraryWatchedBtn.addEventListener('click', onWatchedBtn);\nif (refs.libraryQueueBtn)\n  refs.libraryQueueBtn.addEventListener('click', onQueueBtn);\n\nfunction onWatchedBtn() {\n  defaultContainerBuild();\n\n  if (JSON.parse(localStorage.getItem(KEY__WATCHED)).length === 0) {\n    defaultPageShow();\n  }\n\n  libraryMainPageBuild();\n\n  refsList().filmsElements.forEach(card =>\n    card.addEventListener('click', onOpenModal)\n  );\n\n  if (refs.libraryWatchedBtn)\n    refs.libraryWatchedBtn.classList.add('header-library__btn-current');\n  if (refs.libraryQueueBtn)\n    refs.libraryQueueBtn.classList.remove('header-library__btn-current');\n}\n\nfunction onQueueBtn() {\n  if (refs.libraryQueueBtn)\n    refs.libraryQueueBtn.classList.add('header-library__btn-current');\n  if (refs.libraryWatchedBtn)\n    refs.libraryWatchedBtn.classList.remove('header-library__btn-current');\n\n  if (\n    !JSON.parse(localStorage.getItem(KEY__QUEUE)) ||\n    JSON.parse(localStorage.getItem(KEY__QUEUE)).length === 0\n  ) {\n    defaultContainerBuild();\n    defaultPageShow();\n  }\n\n  libraryQueuePageBuild();\n}\n\nfunction libraryMainPageBuild() {\n  if (JSON.parse(localStorage.getItem(KEY__WATCHED)).length !== 0) {\n    const markup = JSON.parse(localStorage.getItem(KEY__WATCHED))\n      .map(movie => createMarkUp(movie))\n      .join('');\n    defaultClean();\n    if (refs.libraryMoviesList)\n      refs.libraryMoviesList.insertAdjacentHTML('beforeend', markup);\n  }\n  modalConnection();\n}\n\nfunction libraryQueuePageBuild() {\n  if (JSON.parse(localStorage.getItem(KEY__QUEUE)).length !== 0) {\n    const markup = JSON.parse(localStorage.getItem(KEY__QUEUE))\n      .map(movie => createMarkUp(movie))\n      .join('');\n    defaultClean();\n    if (refs.libraryMoviesList)\n      refs.libraryMoviesList.insertAdjacentHTML('beforeend', markup);\n  }\n  modalConnection();\n}\n\nfunction defaultClean() {\n  if (refs.libraryMoviesList) refs.libraryMoviesList.innerHTML = '';\n  if (refs.libraryDefaultContainer)\n    refs.libraryDefaultContainer.style.display = 'none';\n}\n\nfunction defaultContainerBuild() {\n  if (refs.libraryMoviesList) refs.libraryMoviesList.innerHTML = '';\n  if (refs.libraryDefaultContainer)\n    refs.libraryDefaultContainer.style.display = 'flex';\n}\n\nfunction modalConnection() {\n  refsList().filmsElements.forEach(card =>\n    card.addEventListener('click', onOpenModal)\n  );\n}\n"],"names":["$eZ7d6","parcelRequire","$bc155ad5587a66e4$export$2e2bcd8739ae039","$parcel$interopDefault","template","compiler","main","container","depth0","helpers","partials","data","helper","alias1","lambda","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","hooks","helperMissing","nullContext","name","hash","loc","start","line","column","end","useData","$93effc6fc56091ad$var$refs","$4Nugj","default","$93effc6fc56091ad$export$920aa9f8e14839b8","_renderList","$2TvXO","mark","_callee","genersList","markup","$kitKc","fetchGenres","_ctx","sent","forEach","el","newArr","genre_ids","gener","newEl","find","x","id","push","length","splice","join","map","film","slice","libraryMoviesList","insertAdjacentHTML","filmsElements","card","addEventListener","$5xtVg","onOpenModal","apply","this","arguments","fetchTrendingMovies","then","renderList","results","console","log","$829e014595e963da$var$refs","$829e014595e963da$var$KEY__WATCHED","$829e014595e963da$var$KEY__QUEUE","$829e014595e963da$var$libraryMainPageBuild","JSON","parse","localStorage","getItem","movie","$i7QqT","$829e014595e963da$var$defaultClean","$829e014595e963da$var$modalConnection","innerHTML","libraryDefaultContainer","style","display","$829e014595e963da$var$defaultContainerBuild","setItem","stringify","poster_path","title","vote_average","vote_count","popularity","overview","release_date","libraryWatchedBtn","classList","add","libraryQueueBtn","remove","$829e014595e963da$var$libraryQueuePageBuild"],"version":3,"file":"library.277a70a4.js.map"}